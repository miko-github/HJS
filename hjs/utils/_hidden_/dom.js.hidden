import _ from 'lodash';
import jsdom, { JSDOM } from 'jsdom';

let document = new jsdom.JSDOM().window.document;

const classFrom = (arg) => {};
const dom = {
	doc: new jsdom.JSDOM().window.document,
	id(el, id) {
		dom.attr(el, 'id', id);
	},
	class(element, classes = null) {
		if (classes !== null) {
			classFrom(classes).forEach((cls) => element.classList.toggle(cls));
			return undefined;
		} else {
			return {
				add(classList) {
					classFrom(classList).forEach((cls) =>
						element.classList.add(cls),
					);
				},
				remove(classList) {
					classFrom(classList).forEach((cls) =>
						element.classList.remove(cls),
					);
				},
				toggle(older, newer) {
					let [class_1, class_2] = [
						classFrom(older)[0],
						classFrom(newer)[0],
					];
					if (_.isString(class_1) && _.isString(class_2)) {
						element.classList.remove(class_1);
						element.classList.add(class_2);
					}
				},
			};
		}
	},
	append(element, element2 = null) {},
	replace(older, replacement = null) {
		return replacement !== null
			? older.replaceWith(replacement)
			: {
					with(newer) {
						older.replaceWith(newer);
					},
			  };
	},
	select(selector = '#app') {
		let _docu = new JSDOM();
		let docc = _docu.window.document;
		return docc.querySelector(selector);
	},

	// * POWERED: https://github.com/miko-github/dash-dash
	is: {
		html(obj) {
			return (
				_.isObject(obj) && obj !== null && obj instanceof HTMLElement
			);
		},
		node(obj) {
			return _.isObject(obj) && obj !== null && obj instanceof Node;
		},
		element(obj) {
			return _.isObject(obj) && obj !== null && obj instanceof document;
		},
	},
};

export default dom;

/** CLASS
 * @description
 *
 * dom.class(el).add(['class1', 'class-2', ...]);\
 * dom.class(el).add('class1', 'class-2', ...);\
 * dom.class(el).add('class1 class-2 ...');\
 * dom.class(el).remove(...);\
 * dom.class(el).toggle('class-1', 'class-2'); // replace\
 * dom.class(el).exist('class'); // if isExist return true and else return false\
 * dom.class(el, 'classes'); // if exist, remove and else add\
 */
/** APPEND
 * @description
 *
 * dom.append('child').to('parent');
 * dom.append('parent').with('child');
 * dom.append('parent').from(...children);
 * dom.append('child', 'parent');
 */
